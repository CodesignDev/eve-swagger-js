/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.3.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetWarsWarIdOk', 'model/GetWarsWarIdUnprocessableEntity', 'model/GetWarsWarIdInternalServerError', 'model/GetWarsWarIdKillmails200Ok', 'model/GetWarsWarIdKillmailsInternalServerError', 'model/GetWarsWarIdKillmailsUnprocessableEntity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GetWarsWarIdOk'), require('../model/GetWarsWarIdUnprocessableEntity'), require('../model/GetWarsWarIdInternalServerError'), require('../model/GetWarsWarIdKillmails200Ok'), require('../model/GetWarsWarIdKillmailsInternalServerError'), require('../model/GetWarsWarIdKillmailsUnprocessableEntity'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.WarsApi = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetWarsWarIdOk, root.EveSwaggerInterface.GetWarsWarIdUnprocessableEntity, root.EveSwaggerInterface.GetWarsWarIdInternalServerError, root.EveSwaggerInterface.GetWarsWarIdKillmails200Ok, root.EveSwaggerInterface.GetWarsWarIdKillmailsInternalServerError, root.EveSwaggerInterface.GetWarsWarIdKillmailsUnprocessableEntity);
  }
}(this, function(ApiClient, GetWarsWarIdOk, GetWarsWarIdUnprocessableEntity, GetWarsWarIdInternalServerError, GetWarsWarIdKillmails200Ok, GetWarsWarIdKillmailsInternalServerError, GetWarsWarIdKillmailsUnprocessableEntity) {
  'use strict';

  /**
   * Wars service.
   * @module api/WarsApi
   * @version 0.3.8
   */

  /**
   * Constructs a new WarsApi. 
   * @alias module:api/WarsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getWarsWarId operation.
     * @callback module:api/WarsApi~getWarsWarIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetWarsWarIdOk} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get war information
     * Return details about a war  ---  Alternate route: &#x60;/v1/wars/{war_id}/&#x60;  Alternate route: &#x60;/legacy/wars/{war_id}/&#x60;  Alternate route: &#x60;/dev/wars/{war_id}/&#x60;   ---  This route is cached for up to 3600 seconds
     * @param {Integer} warId ID for a war
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {module:api/WarsApi~getWarsWarIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetWarsWarIdOk}
     */
    this.getWarsWarId = function(warId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'warId' is set
      if (warId == undefined || warId == null) {
        throw "Missing the required parameter 'warId' when calling getWarsWarId";
      }


      var pathParams = {
        'war_id': warId
      };
      var queryParams = {
        'datasource': opts['datasource']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GetWarsWarIdOk;

      return this.apiClient.callApi(
        '/wars/{war_id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getWarsWarIdKillmails operation.
     * @callback module:api/WarsApi~getWarsWarIdKillmailsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetWarsWarIdKillmails200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List kills for a war
     * Return a list of kills related to a war  ---  Alternate route: &#x60;/v1/wars/{war_id}/killmails/&#x60;  Alternate route: &#x60;/legacy/wars/{war_id}/killmails/&#x60;  Alternate route: &#x60;/dev/wars/{war_id}/killmails/&#x60;   ---  This route is cached for up to 3600 seconds
     * @param {Integer} warId A valid war ID
     * @param {Object} opts Optional parameters
     * @param {Integer} opts.page Which page to query, starting at 1, 2000 killmails per page. (default to 1)
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {module:api/WarsApi~getWarsWarIdKillmailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetWarsWarIdKillmails200Ok>}
     */
    this.getWarsWarIdKillmails = function(warId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'warId' is set
      if (warId == undefined || warId == null) {
        throw "Missing the required parameter 'warId' when calling getWarsWarIdKillmails";
      }


      var pathParams = {
        'war_id': warId
      };
      var queryParams = {
        'page': opts['page'],
        'datasource': opts['datasource']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [GetWarsWarIdKillmails200Ok];

      return this.apiClient.callApi(
        '/wars/{war_id}/killmails/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
